/* tslint:disable */
/* eslint-disable */
/**
 * gomoking bff API
 * BFF
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ItemResponseDto } from './ItemResponseDto';
import {
    ItemResponseDtoFromJSON,
    ItemResponseDtoFromJSONTyped,
    ItemResponseDtoToJSON,
    ItemResponseDtoToJSONTyped,
} from './ItemResponseDto';

/**
 * 
 * @export
 * @interface PantryDetailResponseDto
 */
export interface PantryDetailResponseDto {
    /**
     * パントリーID
     * @type {number}
     * @memberof PantryDetailResponseDto
     */
    id: number;
    /**
     * ユーザーID
     * @type {number}
     * @memberof PantryDetailResponseDto
     */
    userId: number;
    /**
     * 作成日時
     * @type {string}
     * @memberof PantryDetailResponseDto
     */
    createdAt: string;
    /**
     * 更新日時
     * @type {string}
     * @memberof PantryDetailResponseDto
     */
    updatedAt: string;
    /**
     * このパントリーに属するアイテム一覧
     * @type {Array<ItemResponseDto>}
     * @memberof PantryDetailResponseDto
     */
    items: Array<ItemResponseDto>;
}

/**
 * Check if a given object implements the PantryDetailResponseDto interface.
 */
export function instanceOfPantryDetailResponseDto(value: object): value is PantryDetailResponseDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function PantryDetailResponseDtoFromJSON(json: any): PantryDetailResponseDto {
    return PantryDetailResponseDtoFromJSONTyped(json, false);
}

export function PantryDetailResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PantryDetailResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userId': json['userId'],
        'createdAt': json['createdAt'],
        'updatedAt': json['updatedAt'],
        'items': ((json['items'] as Array<any>).map(ItemResponseDtoFromJSON)),
    };
}

export function PantryDetailResponseDtoToJSON(json: any): PantryDetailResponseDto {
    return PantryDetailResponseDtoToJSONTyped(json, false);
}

export function PantryDetailResponseDtoToJSONTyped(value?: PantryDetailResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userId': value['userId'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'items': ((value['items'] as Array<any>).map(ItemResponseDtoToJSON)),
    };
}

